import sys
sys,path.appent('..')
>>> matrix_divided = __import__ ('2-matrix_divided').matrix_divided
>>> matrix_divided([[3, 6, 10],[20, 70, 98]], 2)
[[1.5, 3.0, 5.0], [10.0, 35.0, 49.0]]
>>> matrix_divided([[3, 6],[20, 70, 98]], 2)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size
>>> matrix_divided([[3, 6, 10],[20, 70, 'f']], 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[3, 6, 10],[20, 70, 98]], 'y')
Traceback (most recent call last):
...
TypeError: div must be a number
>>> matrix_divided([[3, 6, 10],[20, 70, 98]], None)
Traceback (most recent call last):
...
TypeError: div must be a number
>>> matrix_divided(None, 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[3, 6, 10],[20, 70, 98]], 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero
>>> matrix_divided([[],[]], None)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([1,2,3], 0)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
